name: Icon Extractor

on:
  schedule:
    # Run at 00:00 UTC every day
    - cron: "0 0 * * *"
  workflow_dispatch: # Allows manual triggering

jobs:
  extract-icons:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16" # or whichever version you prefer

      - name: Install dependencies
        run: npm install

      - name: Run icon extractor
        run: npx npm-check-updates -u && npm install && node index.js

      - name: Get previous version
        id: prev_version
        run: echo "prev_version=$(cat previous-version.txt)" >> $GITHUB_OUTPUT

      - name: Get current version
        id: curr_version
        run: echo "curr_version=$(cat latest-version.txt)" >> $GITHUB_OUTPUT

      - name: Compare versions and update README
        run: |
          PREV_VERSION=${{ steps.prev_version.outputs.prev_version }}
          CURR_VERSION=${{ steps.curr_version.outputs.curr_version }}
          if [ "$PREV_VERSION" != "$CURR_VERSION" ]; then
            COMPARISON=$(node compare.js $PREV_VERSION $CURR_VERSION --no-color)
            
            # Update README with comparison results
            sed -i '/^### Changelog/,/^$/d' README.md  # Remove existing Changelog section
            echo -e "\n### Changelog\n" >> README.md
            echo -e "#### Changes from version $PREV_VERSION to $CURR_VERSION\n" >> README.md
            echo '```' >> README.md
            echo "$COMPARISON" >> README.md
            echo '```' >> README.md
            
            # Append previous changelog entries
            if [ -f CHANGELOG.md ]; then
              echo -e "\n" >> README.md
              tail -n +3 CHANGELOG.md >> README.md  # Append all but the first two lines of CHANGELOG.md
            fi
            
            # Update CHANGELOG.md
            echo -e "### Changelog\n" > CHANGELOG.md
            sed -n '/^### Changelog/,$ p' README.md >> CHANGELOG.md
          else
            echo "No version change detected. Skipping comparison."
          fi

      - name: Commit and push if changed
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add -A
          git diff --quiet && git diff --staged --quiet || (git commit -m "Update icons and README")
          git pull --rebase
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

      - name: Create release and tag
        run: |
          VERSION=$(cat latest-version.txt)
          if ! git rev-parse "v$VERSION" >/dev/null 2>&1; then
            git tag -a "v$VERSION" -m "Version $VERSION"
            git push origin "v$VERSION"
            echo "Created and pushed tag v$VERSION"

            zip -r icons.zip icons/$VERSION icons/grid-$VERSION.svg

            gh release create "v$VERSION" icons.zip \
              --title "Release $VERSION" \
              --notes "Automated release for version $VERSION" \
              --target main
            
            echo "Created release v$VERSION with icons"
          else
            echo "Tag v$VERSION already exists, skipping release creation"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
